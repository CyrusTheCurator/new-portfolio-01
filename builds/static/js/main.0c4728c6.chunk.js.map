{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Work.js","components/About.js","components/Contact.js","components/MainContentContainer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","to","activeClassName","Home","className","Work","About","Contact","MainContentContainer","path","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yOAuBeA,MArBf,SAAgBC,GACd,OACE,oCACE,6BACE,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAgB,iBAApC,QAGA,kBAAC,IAAD,CAASD,GAAG,QAAQC,gBAAgB,iBAApC,QAGA,kBAAC,IAAD,CAASD,GAAG,SAASC,gBAAgB,iBAArC,SAEW,IACX,kBAAC,IAAD,CAASD,GAAG,WAAWC,gBAAgB,iBAAvC,cCYOC,MAlBf,SAAcH,GACZ,OACE,yBAAKI,UAAU,iBACb,yBAAKA,UAAU,aAAf,QACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAf,UACA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,WACK,MCKEC,MAlBf,SAAcL,GACZ,OACE,yBAAKI,UAAU,iBACb,yBAAKA,UAAU,aAAf,QACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAf,UACA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,WACK,MCKEE,MAlBf,SAAeN,GACb,OACE,yBAAKI,UAAU,iBACb,yBAAKA,UAAU,aAAf,SACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAf,UACA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,WACK,MCKEG,MAlBf,SAAiBP,GACf,OACE,yBAAKI,UAAU,iBACb,yBAAKA,UAAU,aAAf,WACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAf,UACA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,UAEA,yBAAKA,UAAU,aAAf,WACK,M,OCeEI,MA/Bf,SAA8BR,GAC5B,OACE,oCACE,kBAAC,IAAD,CACES,KAAK,QACLC,OAAQ,SAAAV,GACN,OAAO,kBAAC,EAAD,CAAMA,MAAOA,OAGxB,kBAAC,IAAD,CACES,KAAK,QACLC,OAAQ,SAAAV,GACN,OAAO,kBAAC,EAAD,CAAMA,MAAOA,OAGxB,kBAAC,IAAD,CACES,KAAK,SACLC,OAAQ,SAAAV,GACN,OAAO,kBAAC,EAAD,CAAOA,MAAOA,OAGzB,kBAAC,IAAD,CACES,KAAK,WACLC,OAAQ,SAAAV,GACN,OAAO,kBAAC,EAAD,CAASA,MAAOA,SCVlBW,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAKP,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,OAEF,oDAEA,kBAAC,EAAD,SCFYQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0c4728c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction Navbar(props) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <NavLink to=\"/home\" activeClassName=\"activeNavlink\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink to=\"/work\" activeClassName=\"activeNavlink\">\r\n          Work\r\n        </NavLink>\r\n        <NavLink to=\"/about\" activeClassName=\"activeNavlink\">\r\n          About\r\n        </NavLink>{\" \"}\r\n        <NavLink to=\"/contact\" activeClassName=\"activeNavlink\">\r\n          Contact\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div className=\"pageTitle\">HOME</div>\r\n      <div className=\"contentContainer\">\r\n        <div className=\"entryItem\">ITEM 1</div>\r\n        <div className=\"entryItem\">ITEM 2</div>\r\n\r\n        <div className=\"entryItem\">ITEM 3</div>\r\n\r\n        <div className=\"entryItem\">ITEM 4</div>\r\n\r\n        <div className=\"entryItem\">ITEM 5</div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nfunction Work(props) {\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div className=\"pageTitle\">WORK</div>\r\n      <div className=\"contentContainer\">\r\n        <div className=\"entryItem\">ITEM 1</div>\r\n        <div className=\"entryItem\">ITEM 2</div>\r\n\r\n        <div className=\"entryItem\">ITEM 3</div>\r\n\r\n        <div className=\"entryItem\">ITEM 4</div>\r\n\r\n        <div className=\"entryItem\">ITEM 5</div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Work;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div className=\"pageTitle\">ABOUT</div>\r\n      <div className=\"contentContainer\">\r\n        <div className=\"entryItem\">ITEM 1</div>\r\n        <div className=\"entryItem\">ITEM 2</div>\r\n\r\n        <div className=\"entryItem\">ITEM 3</div>\r\n\r\n        <div className=\"entryItem\">ITEM 4</div>\r\n\r\n        <div className=\"entryItem\">ITEM 5</div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nfunction Contact(props) {\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div className=\"pageTitle\">CONTACT</div>\r\n      <div className=\"contentContainer\">\r\n        <div className=\"entryItem\">ITEM 1</div>\r\n        <div className=\"entryItem\">ITEM 2</div>\r\n\r\n        <div className=\"entryItem\">ITEM 3</div>\r\n\r\n        <div className=\"entryItem\">ITEM 4</div>\r\n\r\n        <div className=\"entryItem\">ITEM 5</div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport Work from \"./Work\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport { Route } from \"react-router-dom\";\r\nfunction MainContentContainer(props) {\r\n  return (\r\n    <>\r\n      <Route\r\n        path=\"/home\"\r\n        render={props => {\r\n          return <Home props={props} />;\r\n        }}\r\n      ></Route>\r\n      <Route\r\n        path=\"/work\"\r\n        render={props => {\r\n          return <Work props={props} />;\r\n        }}\r\n      ></Route>\r\n      <Route\r\n        path=\"/about\"\r\n        render={props => {\r\n          return <About props={props} />;\r\n        }}\r\n      ></Route>\r\n      <Route\r\n        path=\"/contact\"\r\n        render={props => {\r\n          return <Contact props={props} />;\r\n        }}\r\n      ></Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainContentContainer;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport MainContentContainer from \"./components/MainContentContainer\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar />\n        </header>\n        <h3>Josh Luscombe - 2020</h3>\n\n        <MainContentContainer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/styles.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}